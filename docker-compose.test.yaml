version: '3.7'

networks:
  rabbit_test:
    driver: bridge
  postgres_test:
    driver: bridge
  banners-rotation_test:
    driver: bridge

services:
  integration_tests:
    build: "tests"
    command: 'true'
    environment:
      TESTS_AMQP_DSN: 'amqp://guest:guest@rabbit_test:5672/'
      TESTS_POSTGRES_DSN: 'host=postgres_test port=5432 user=postgres password=example dbname=banners-rotation_test sslmode=disable'
      TESTS_HTTP_HOST: 'http://banners-rotation_test:5555'
      WAIT_HOSTS: postgres_test:5432, rabbit_test:5672, banners-rotation_test:5555
    depends_on: 
      - banners-rotation
    links:
      - banners-rotation
    networks:
      - rabbit_test
      - postgres_test
      - banners-rotation_test

  postgres:
    image: postgres
    hostname: postgres
    container_name: postgres_test
    expose:
      - 5432
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: banners-rotation_test
    volumes:
      - ./migrations/init_with_data.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - postgres_test

  rabbit:
    image: rabbitmq:3.7.17-management
    hostname: rabbit
    container_name: rabbit_test
    expose:
      - 15672
    restart: always
    volumes:
      - ./configs/rabbit.def.json:/etc/rabbitmq/definitions.json:ro
      - ./configs/rabbit.config:/etc/rabbitmq/rabbitmq.config:ro
    networks:
      - rabbit_test

  banners-rotation:
    build:
      context: .
      dockerfile: ./build/Dockerfile
      args:
        - CONFIG_FILE_NAME=config.test
    hostname: banners-rotation
    container_name: banners-rotation_test
    depends_on:
      - rabbit
      - postgres
    restart: on-failure
    environment:
      - WAIT_HOSTS=postgres_test:5432, rabbit_test:5672
    volumes:
      - ./logs/containers/:/logs/
    networks:
      - banners-rotation_test
      - rabbit_test
      - postgres_test
